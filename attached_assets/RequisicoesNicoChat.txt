{
    "openapi": "3.0.0",
    "info": {
        "title": "NicoChat API",
        "description": "",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https:\/\/app.nicochat.com.br\/api"
        }
    ],
    "paths": {
        "\/flow\/agent-activity-log\/data": {
            "get": {
                "tags": [
                    "Flow Conversation"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get the flow agent activity log data",
                "operationId": "flowAgentActivityLogData",
                "parameters": [
                    {
                        "name": "user_ns",
                        "in": "query",
                        "description": "Subscriber user_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agent_id",
                        "in": "query",
                        "description": "agent id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "conv_id",
                        "in": "query",
                        "description": "Conversation id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "available action: open, close, assign, reply, note, pending, spam, invalid, add_collaborator, remove_collaborator, subscribe_to_bot, unsubscribe_from_bot, opt_in_sms, opt_out_sms, opt_in_email, opt_out_email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source_type",
                        "in": "query",
                        "description": "available source type: agent, bot, bot_user, api, webhook",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "unix timestamp between 6 month agos and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "unix timestamp between 6 months ago and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response, between 1 and 1000",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AgentActivityLogData"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/conversations\/data": {
            "get": {
                "tags": [
                    "Flow Conversation"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get the flow conversation data, only return the closed conversations",
                "operationId": "flowConversationsData",
                "parameters": [
                    {
                        "name": "user_ns",
                        "in": "query",
                        "description": "Subscriber user_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "unix timestamp between 6 month agos and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "unix timestamp between 6 months ago and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "start_id",
                        "in": "query",
                        "description": "starting from id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response, between 1 and 1000",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ConversationData"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/custom-events": {
            "get": {
                "tags": [
                    "Flow Custom Events"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of custom events by flow",
                "operationId": "flowEvents",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for event name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotEventResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/custom-events\/summary": {
            "get": {
                "tags": [
                    "Flow Custom Events"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get the flow custom event summary",
                "operationId": "flowEventsSummary",
                "parameters": [
                    {
                        "name": "range",
                        "in": "query",
                        "description": "Available ranges: <code>yesterday<\/code> (default), <code>last_7_days<\/code>, <code>last_week<\/code>, <code>last_30_days<\/code>, <code>last_month<\/code>, <code>last_3_months<\/code>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "yesterday"
                    },
                    {
                        "name": "event_ns",
                        "in": "query",
                        "description": "the custom event ns",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CustomEvent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "stats": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "num": {
                                                        "description": "the number of event logs",
                                                        "type": "integer",
                                                        "example": "234"
                                                    },
                                                    "unique_user_num": {
                                                        "description": "the number of event logs by unique bot user",
                                                        "type": "integer",
                                                        "example": "123"
                                                    },
                                                    "start_date": {
                                                        "description": "the date of the event log",
                                                        "type": "string",
                                                        "example": "2024-03-26"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total": {
                                            "properties": {
                                                "num": {
                                                    "description": "the total number of event logs",
                                                    "type": "integer",
                                                    "example": "234"
                                                },
                                                "unique_user_num": {
                                                    "description": "the total number of event logs by unique bot user",
                                                    "type": "integer",
                                                    "example": "123"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "example": "2024-03-26 00:00:00"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "example": "2024-03-26 23:59:59"
                                        },
                                        "text_values": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "num": {
                                                        "description": "the number of event logs with the text value",
                                                        "type": "integer",
                                                        "example": "23"
                                                    },
                                                    "unique_user_num": {
                                                        "description": "the number of event logs with the text value by unique bot user",
                                                        "type": "integer",
                                                        "example": "12"
                                                    },
                                                    "text_value": {
                                                        "description": "the text value",
                                                        "type": "string",
                                                        "example": "product"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/custom-events\/data": {
            "get": {
                "tags": [
                    "Flow Custom Events"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get the flow custom event data",
                "operationId": "flowEventsData",
                "parameters": [
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "unix timestamp between 6 month agos and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "unix timestamp between 6 months ago and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "event_ns",
                        "in": "query",
                        "description": "the custom event ns",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_id",
                        "in": "query",
                        "description": "starting from id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CustomEventData"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/bot-fields": {
            "get": {
                "tags": [
                    "Flow Bot Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of bot fields by flow",
                "operationId": "flowBotFields",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for bot field name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotFieldResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/create-bot-field": {
            "post": {
                "tags": [
                    "Flow Bot Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>create new bot field",
                "operationId": "flowCreateBotField",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BotField"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BotField"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/set-bot-field": {
            "put": {
                "tags": [
                    "Flow Bot Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>update bot field value",
                "operationId": "flowUpdateBotField",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Bot Field",
                                "required": [
                                    "var_ns",
                                    "value"
                                ],
                                "properties": {
                                    "var_ns": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotField"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/set-bot-field-by-name": {
            "put": {
                "tags": [
                    "Flow Bot Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>update bot field value by bot field name",
                "operationId": "flowUpdateBotFieldByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Bot Field",
                                "required": [
                                    "name",
                                    "value"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotField"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/set-bot-fields": {
            "put": {
                "tags": [
                    "Flow Bot Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>update multiple bot fields value, up to 20 bot fields",
                "operationId": "flowUpdateBotFields",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "data"
                                ],
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "var_ns": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/set-bot-fields-by-name": {
            "put": {
                "tags": [
                    "Flow Bot Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>update multiple bot fields value by field name, up to 20 bot fields",
                "operationId": "flowUpdateBotFieldsByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "data"
                                ],
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/delete-bot-field": {
            "delete": {
                "tags": [
                    "Flow Bot Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete bot field",
                "operationId": "flowDeleteBotField",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Bot Field",
                                "required": [
                                    "var_ns"
                                ],
                                "properties": {
                                    "var_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/delete-bot-field-by-name": {
            "delete": {
                "tags": [
                    "Flow Bot Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete bot field by name",
                "operationId": "flowDeleteBotFieldByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Bot Field",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/segments": {
            "get": {
                "tags": [
                    "Flow Segment"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of segments by flow",
                "operationId": "flowSegment",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for segment name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotSegmentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscribers": {
            "get": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of subscribers by seaching for name, phone, email, tag, custom user field and so on.",
                "operationId": "flowBotUsers",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 1000",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for subscriber name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Search for subscriber phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Search for subscriber email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_channel",
                        "in": "query",
                        "description": "Search for subscriber is from channel, available value 'facebook', 'instagram', 'whatsapp_cloud', 'whatsapp', 'google', 'telegram', 'line', 'viber', 'vk', 'wechat', 'web', 'apichat'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_opt_in_email",
                        "in": "query",
                        "description": "Search for subscriber is opted in email, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_opt_in_sms",
                        "in": "query",
                        "description": "Search for subscriber is opted in SMS, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_interacted_in_last_24h",
                        "in": "query",
                        "description": "Search for subscriber is interacted within last 24 hours, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_bot_interacted_in_last_24h",
                        "in": "query",
                        "description": "Search for subscribers have bot interacted within last 24 hours, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_last_message_in_last_24h",
                        "in": "query",
                        "description": "Search for subscribers have last message within last 24 hours, including message sent from bot user, agent and bot, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag_ns",
                        "in": "query",
                        "description": "Search for subscriber has tag with specified tag_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_id",
                        "in": "query",
                        "description": "Search for subscriber has label with specified label_id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "event_ns",
                        "in": "query",
                        "description": "Search for subscriber has custom event with specified event_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_field_ns",
                        "in": "query",
                        "description": "Search for subscriber has custom user field with specified value from `user_field_value`",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_field_value",
                        "in": "query",
                        "description": "specified value for custom user field `user_field_ns`",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotUserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/get-info": {
            "get": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get subscriber info",
                "operationId": "flowBotUserInfo",
                "parameters": [
                    {
                        "name": "user_ns",
                        "in": "query",
                        "description": "Subscriber user_ns",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/get-info-by-user-id": {
            "get": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get subscriber info by user unique id from channel, e.g. Facebook user id, WhatsApp user id, WeChat user id...",
                "operationId": "flowBotUserInfoByUserId",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Subscriber user_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/create": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Create new subscriber, phone or email is required",
                "operationId": "flowCreateBotUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "phone",
                                    "email"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "male,female",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "profile image",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/update": {
            "put": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Update subscriber data",
                "operationId": "flowUpdateBotUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "profile image",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/delete": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete subscriber",
                "operationId": "flowDeleteBotUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/add-tag": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Add tag to subscriber",
                "operationId": "flowBotUserAddTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "tag_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "tag_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/add-tags": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Add tags to subscriber, up to 20 tags",
                "operationId": "flowBotUserAddTags",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "tag_ns": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/add-tag-by-name": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Add tag to subscriber by tag name",
                "operationId": "flowBotUserAddTagByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "tag_name"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "tag_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/add-tags-by-name": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Add tags by tag name to subscriber, up to 20 tags",
                "operationId": "flowBotUserAddTagsByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "tag_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/remove-tag": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Remove tag from subscriber",
                "operationId": "flowBotUserRemoveTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "tag_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "tag_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/remove-tags": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Remove tags from subscriber, up to 20 tags",
                "operationId": "flowBotUserRemoveTags",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "tag_ns": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/remove-tag-by-name": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Remove tag from subscriber by tag name",
                "operationId": "flowBotUserRemoveTagByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "tag_name"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "tag_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/remove-tags-by-name": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Remove tags from subscriber by tag name, up to 20 tags",
                "operationId": "flowBotUserRemoveTagsByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "tag_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/add-labels-by-name": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Add labels by label name to subscriber, up to 20 labels",
                "operationId": "flowBotUserAddLabelsByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "label_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/remove-labels-by-name": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Remove labels from subscriber by label name, up to 20 labels",
                "operationId": "flowBotUserRemoveLabelsByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "label_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/set-user-field": {
            "put": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Set or update subscriber user field value",
                "operationId": "flowBotUserSetUserField",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "var_ns",
                                    "value"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "var_ns": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/set-user-fields": {
            "put": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Set or update subscriber multiple user field value, up to 20 user fields",
                "operationId": "flowBotUserSetUserFields",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "var_ns": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/set-user-field-by-name": {
            "put": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Set or update subscriber user field value by field name",
                "operationId": "flowBotUserSetUserFieldByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "field_name",
                                    "value"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "field_name": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/set-user-fields-by-name": {
            "put": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Set or update subscriber multiple user field value, up to 20 user fields",
                "operationId": "flowBotUserSetUserFieldsByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/clear-user-field": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Clear subscriber user field value",
                "operationId": "flowBotUserClearUserField",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "var_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "var_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/clear-user-fields": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Clear multiple subscriber user fields, up to 20 user fields",
                "operationId": "flowBotUserClearUserFields",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "var_ns": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/clear-user-field-by-name": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Clear subscriber user field value by field name",
                "operationId": "flowBotUserClearUserFieldByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "field_name"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "field_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/clear-user-fields-by-name": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Clear multiple subscriber user fields, up to 20 user fields",
                "operationId": "flowBotUserClearUserFieldsByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-main-flow": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send main flow to subscriber",
                "operationId": "flowBotUserSendMainFlow",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-sub-flow": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send sub flow to subscriber",
                "operationId": "flowBotUserSendSubFlow",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "sub_flow_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-sub-flow-by-flow-name": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send sub flow to subscriber by flow name",
                "operationId": "flowBotUserSendSubFlowByFlowName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "flow_name"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "flow_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-sub-flow-by-user-id": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send sub flow to subscriber by the unique user id from each channel",
                "operationId": "flowBotUserSendSubFlowByUserId",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_id",
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    },
                                    "sub_flow_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/broadcast": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Broadcast sub flow by user ns list, available types: EMAIL,SMS,WHATSAPP_TEMPLATE,FACEBOOK_NOTIFICATION",
                "operationId": "flowBotUserBroadcast",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns_list",
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "user_ns_list": {
                                        "description": "comma separated user ns, up to 200 user ns",
                                        "type": "string",
                                        "example": "f123u111,f123u222,f123u333"
                                    },
                                    "sub_flow_ns": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "available values: EMAIL,SMS,WHATSAPP_TEMPLATE,FACEBOOK_NOTIFICATION",
                                        "type": "string",
                                        "example": "EMAIL"
                                    },
                                    "scheduled_time": {
                                        "description": "unix timestamp, e.g. 1786123679. Leave empty to send now",
                                        "type": "integer",
                                        "example": "1786123679"
                                    },
                                    "max_per_minute": {
                                        "description": "Rate limit, maximum per minute, default is 60",
                                        "type": "integer",
                                        "example": "60"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/broadcast-by-user-id": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Broadcast sub flow by user ids, available types: EMAIL,SMS,WHATSAPP_TEMPLATE,FACEBOOK_NOTIFICATION",
                "operationId": "flowBotUserBroadcastByUserId",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_id_list",
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "user_id_list": {
                                        "description": "comma separated user ids, up to 200 user ids",
                                        "type": "string",
                                        "example": "61412345678,61387625429,61245638917"
                                    },
                                    "sub_flow_ns": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "available values: EMAIL,SMS,WHATSAPP_TEMPLATE,FACEBOOK_NOTIFICATION",
                                        "type": "string",
                                        "example": "EMAIL"
                                    },
                                    "scheduled_time": {
                                        "description": "unix timestamp, e.g. 1786123679. Leave empty to send now",
                                        "type": "integer",
                                        "example": "1786123679"
                                    },
                                    "max_per_minute": {
                                        "description": "Rate limit, maximum per minute, default is 60",
                                        "type": "integer",
                                        "example": "60"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/broadcast-by-tag": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Broadcast sub flow by tags, available types: EMAIL,SMS,WHATSAPP_TEMPLATE,FACEBOOK_NOTIFICATION",
                "operationId": "flowBotUserBroadcastByTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "tags",
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "tags": {
                                        "description": "array of tag ns, up to 10 tag ns",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "f123t456"
                                        }
                                    },
                                    "exclude_tags": {
                                        "description": "array of tag ns, up to 10 tag ns",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "f123t568"
                                        }
                                    },
                                    "sub_flow_ns": {
                                        "type": "string",
                                        "example": "f123s789"
                                    },
                                    "name": {
                                        "description": "set a name for this broadcast",
                                        "type": "string",
                                        "example": "broadcast by tag"
                                    },
                                    "scheduled_time": {
                                        "description": "unix timestamp, e.g. 1786123679. Leave empty to send now",
                                        "type": "integer",
                                        "example": "1786123679"
                                    },
                                    "max_per_minute": {
                                        "description": "Rate limit, maximum per minute, default is 60",
                                        "type": "integer",
                                        "example": "60"
                                    },
                                    "type": {
                                        "description": "available values: EMAIL,SMS,WHATSAPP_TEMPLATE,FACEBOOK_NOTIFICATION",
                                        "type": "string",
                                        "example": "FACEBOOK_NOTIFICATION"
                                    },
                                    "message_tag": {
                                        "description": "when type is FACEBOOK_NOTIFICATION, available values: CONFIRMED_EVENT_UPDATE,POST_PURCHASE_UPDATE,ACCOUNT_UPDATE,NON_PROMOTIONAL_SUBSCRIPTION",
                                        "type": "string",
                                        "example": "POST_PURCHASE_UPDATE"
                                    },
                                    "user_fields": {
                                        "description": "up to 10 user fields",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "var_ns": {
                                                    "type": "string",
                                                    "example": "f123v345"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/broadcast-by-segment": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Broadcast sub flow by segments, available types: EMAIL,SMS,WHATSAPP_TEMPLATE,FACEBOOK_NOTIFICATION",
                "operationId": "flowBotUserBroadcastBySegment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "segment_ns",
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "segment_ns": {
                                        "description": "comma separated segment ns, up to 10 segment ns",
                                        "type": "string",
                                        "example": "f123sg34,f123sg56"
                                    },
                                    "sub_flow_ns": {
                                        "type": "string",
                                        "example": "f123s789"
                                    },
                                    "scheduled_time": {
                                        "description": "unix timestamp, e.g. 1786123679. Leave empty to send now",
                                        "type": "integer",
                                        "example": "1786123679"
                                    },
                                    "max_per_minute": {
                                        "description": "Rate limit, maximum per minute, default is 60",
                                        "type": "integer",
                                        "example": "60"
                                    },
                                    "type": {
                                        "description": "available values: EMAIL,SMS,WHATSAPP_TEMPLATE,FACEBOOK_NOTIFICATION",
                                        "type": "string",
                                        "example": "EMAIL"
                                    },
                                    "message_tag": {
                                        "description": "when type is FACEBOOK_NOTIFICATION, available values: CONFIRMED_EVENT_UPDATE,POST_PURCHASE_UPDATE,ACCOUNT_UPDATE,NON_PROMOTIONAL_SUBSCRIPTION",
                                        "type": "string",
                                        "example": "POST_PURCHASE_UPDATE"
                                    },
                                    "bot_fields": {
                                        "description": "up to 10 bot fields",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "var_ns": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-content": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send content to subscriber, learn more about how to use dynamic content ",
                "operationId": "flowBotUserSendContent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "data"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "properties": {
                                            "version": {
                                                "type": "string",
                                                "enum": [
                                                    "v1"
                                                ],
                                                "example": "v1"
                                            },
                                            "content": {
                                                "properties": {
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "text",
                                                                        "image",
                                                                        "audio",
                                                                        "video",
                                                                        "file",
                                                                        "cards"
                                                                    ],
                                                                    "example": "text"
                                                                },
                                                                "text": {
                                                                    "type": "string",
                                                                    "example": "text message"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "actions": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "action": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "add_tag",
                                                                        "remove_tag",
                                                                        "set_field_value",
                                                                        "unset_field_value"
                                                                    ],
                                                                    "example": "add_tag"
                                                                },
                                                                "tag_name": {
                                                                    "type": "string",
                                                                    "example": "tag name"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "quick_replies": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "node",
                                                                        "url",
                                                                        "dynamic_block_callback"
                                                                    ],
                                                                    "example": "node"
                                                                },
                                                                "caption": {
                                                                    "type": "string",
                                                                    "example": "Show"
                                                                },
                                                                "target": {
                                                                    "type": "string",
                                                                    "example": "node_ns"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "goto": {
                                                        "type": "string",
                                                        "example": "node name or node_ns"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/pause-bot": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Pause bot automation to subscriber",
                "operationId": "flowBotUserPauseBot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "minutes"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "minutes": {
                                        "type": "integer",
                                        "example": "30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/resume-bot": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Resume bot automation to subscriber",
                "operationId": "flowBotUserResumeBot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/move-chat-to": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Update chat status",
                "operationId": "flowBotUserMoveChatTo",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "status"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "open,pending,spam,done"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/assign-agent": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Assign agent to chat",
                "operationId": "flowBotUserAssignAgent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "agent_id"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "agent_id": {
                                        "type": "integer",
                                        "example": "123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/assign-agent-group": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Assign agent group to chat",
                "operationId": "flowBotUserAssignAgentGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "agent_group_id"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "agent_group_id": {
                                        "type": "integer",
                                        "example": "123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/unassign-agent": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Unassign agent from chat",
                "operationId": "flowBotUserUnassignAgent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/subscribe-to-bot": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Subscribe to bot",
                "operationId": "flowBotUserSubscribeToBot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/unsubscribe-from-bot": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Unsubscribe from bot",
                "operationId": "flowBotUserUnsubscribeFromBot",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/opt-in-sms": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Opt-in SMS",
                "operationId": "flowBotUserOptInSms",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/opt-out-sms": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Opt-out SMS",
                "operationId": "flowBotUserOptOutSms",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/opt-in-email": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Opt-in Email",
                "operationId": "flowBotUserOptInEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/opt-out-email": {
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Opt-out Email",
                "operationId": "flowBotUserOptOutEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/log-custom-event": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Log custom event",
                "operationId": "flowBotUserLogCustomEvent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "event_name"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "event_name": {
                                        "type": "string"
                                    },
                                    "text_value": {
                                        "type": "string"
                                    },
                                    "price_value": {
                                        "type": "integer"
                                    },
                                    "number_value": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/app-trigger": {
            "post": {
                "tags": [
                    "Mini-App"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Trigger an app event on subscriber from installed min-app",
                "operationId": "flowBotUserAppTrigger",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "trigger_name"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "trigger_name": {
                                        "type": "string"
                                    },
                                    "context": {
                                        "properties": {
                                            "product_name": {
                                                "type": "string",
                                                "example": "apple"
                                            },
                                            "product_id": {
                                                "type": "string",
                                                "example": "123"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-text": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send text content to subscriber",
                "operationId": "flowBotUserSendText",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "content"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "text message"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-sms": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send sms content to subscriber",
                "operationId": "flowBotUserSendSms",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "content"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "sms message"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-email": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send email content to subscriber",
                "operationId": "flowBotUserSendEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "content"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "email content"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "email subject"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-node": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send node to subscriber",
                "operationId": "flowBotUserSendNode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "node_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "node_ns": {
                                        "type": "string",
                                        "example": "f123n456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-whatsapp-template": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send Whatsapp Template to subscriber, you can find the namespace, name, lang, params from \/api\/whatapp-template\/list ",
                "operationId": "flowBotUserSendWhatsappTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "content"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "required": [
                                            "namespace",
                                            "name",
                                            "lang"
                                        ],
                                        "properties": {
                                            "namespace": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "lang": {
                                                "type": "string"
                                            },
                                            "params": {
                                                "properties": {
                                                    "HEADER_IMAGE": {
                                                        "type": "string",
                                                        "example": "https:\/\/example.com\/image.png"
                                                    },
                                                    "BODY_{{1}}": {
                                                        "type": "string",
                                                        "example": "text"
                                                    },
                                                    "BODY_{{2}}": {
                                                        "type": "string",
                                                        "example": "text"
                                                    },
                                                    "QUICK_REPLY_1": {
                                                        "type": "string",
                                                        "example": "sub flow ns"
                                                    },
                                                    "QUICK_REPLY_2": {
                                                        "type": "string",
                                                        "example": "sub flow ns"
                                                    },
                                                    "URL_1": {
                                                        "type": "string",
                                                        "example": "https:\/\/example.com\/url"
                                                    },
                                                    "URL_2": {
                                                        "type": "string",
                                                        "example": "https:\/\/example.com\/url"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/send-whatsapp-template-by-user-id": {
            "post": {
                "tags": [
                    "Sending"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Send Whatsapp Template to subscriber, you can find the namespace, name, lang, params from \/api\/whatapp-template\/list ",
                "operationId": "flowBotUserSendWhatsappTemplateByUserId",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_id",
                                    "content"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    },
                                    "create_if_not_found": {
                                        "description": "yes or no",
                                        "type": "string",
                                        "example": "no"
                                    },
                                    "content": {
                                        "required": [
                                            "namespace",
                                            "name",
                                            "lang"
                                        ],
                                        "properties": {
                                            "namespace": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "lang": {
                                                "type": "string"
                                            },
                                            "params": {
                                                "properties": {
                                                    "HEADER_IMAGE": {
                                                        "type": "string",
                                                        "example": "https:\/\/example.com\/image.png"
                                                    },
                                                    "BODY_{{1}}": {
                                                        "type": "string",
                                                        "example": "text"
                                                    },
                                                    "BODY_{{2}}": {
                                                        "type": "string",
                                                        "example": "text"
                                                    },
                                                    "QUICK_REPLY_1": {
                                                        "type": "string",
                                                        "example": "sub flow ns"
                                                    },
                                                    "QUICK_REPLY_2": {
                                                        "type": "string",
                                                        "example": "sub flow ns"
                                                    },
                                                    "URL_1": {
                                                        "type": "string",
                                                        "example": "https:\/\/example.com\/url"
                                                    },
                                                    "URL_2": {
                                                        "type": "string",
                                                        "example": "https:\/\/example.com\/url"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/chat-messages": {
            "get": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of subscriber chat messages.<br>type: in -> Incoming message from bot user, out -> Ougoing message from bot, agent -> Outgoing message from human agent",
                "operationId": "flowBotUserChatMessages",
                "parameters": [
                    {
                        "name": "user_ns",
                        "in": "query",
                        "description": "Subscriber user_ns, required if no user_id in the query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Subscriber user_id, required if no user_ns in the query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_bot",
                        "in": "query",
                        "description": "set value 1 to include bot messages, default is 0",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "unix timestamp between one month ago and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "unix timestamp between one month ago and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChatMessageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/chat-messages-by-mids": {
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get chat messages by multiple mids, up to 100 mids.<br>type: in -> Incoming message from bot user, out -> Ougoing message from bot, agent -> Outgoing message from human agent",
                "operationId": "flowBotUserChatMessagesByMids",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "mids"
                                ],
                                "properties": {
                                    "mids": {
                                        "description": "array of mid, up to 100 mids",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "xxxxxx"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChatMessageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/subflows": {
            "get": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of sub flows",
                "operationId": "flowSubFlows",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for sub flow name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SubFlowResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/delete-sub-flow": {
            "delete": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete sub flow",
                "operationId": "flowDeleteSubFlow",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Sub Flow Ns",
                                "required": [
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "sub_flow_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/bot-users-count": {
            "get": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get count of bot users status",
                "operationId": "flowBotUsersCount",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "open",
                                                            "pending",
                                                            "spam",
                                                            "done"
                                                        ],
                                                        "example": "open"
                                                    },
                                                    "num": {
                                                        "type": "integer",
                                                        "example": "123"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/agents": {
            "get": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of agents",
                "operationId": "flowAgents",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for agent name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role, available role: owner, admin, member, agent",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TeamAgentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/template-installs": {
            "get": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of template installs in this flow",
                "operationId": "FlowTemplatesInstalls",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TemplateInstallLogResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/set-default-start-flow": {
            "post": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Set default bot start flow, use <code>main<\/code> to reset the start flow to main flow",
                "operationId": "flowSetDefaultStartFlow",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "sub_flow_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/set-web-chat-widget-default-start-flow": {
            "post": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Set default start flow for web chat widget, use <code>main<\/code> to set the start flow to main flow",
                "operationId": "flowSetWebChatWidgetDefaultStartFlow",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "sub_flow_ns"
                                ],
                                "properties": {
                                    "sub_flow_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/settings\/set-audio-transcription": {
            "post": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Set audio transcription, available values: none,whisper-1,gpt-4o-transcribe,gpt-4o-mini-transcribe",
                "operationId": "flowSetAudioTranscription",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "stt_model"
                                ],
                                "properties": {
                                    "stt_model": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/inbound-webhooks": {
            "get": {
                "tags": [
                    "Flow"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of inbound webhooks by flow",
                "operationId": "flowInboundWebhooks",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InboundWebhookResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/tags": {
            "get": {
                "tags": [
                    "Flow Tag"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of tags by flow",
                "operationId": "flowTags",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for tag name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TagResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/create-tag": {
            "post": {
                "tags": [
                    "Flow Tag"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>create new tag",
                "operationId": "flowCreateTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Tag",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Tag"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/delete-tag": {
            "delete": {
                "tags": [
                    "Flow Tag"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete tag",
                "operationId": "flowDeleteTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Tag",
                                "required": [
                                    "tag_ns"
                                ],
                                "properties": {
                                    "tag_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/delete-tag-by-name": {
            "delete": {
                "tags": [
                    "Flow Tag"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete tag by tag name",
                "operationId": "flowDeleteTagByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Tag",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/user-fields": {
            "get": {
                "tags": [
                    "Flow User Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get list of user fields by flow",
                "operationId": "flowUserFields",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for user field name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserFieldResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/create-user-field": {
            "post": {
                "tags": [
                    "Flow User Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>create new user field",
                "operationId": "flowCreateUserField",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UserField"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/UserField"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/delete-user-field": {
            "delete": {
                "tags": [
                    "Flow User Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete user field",
                "operationId": "flowDeleteUserField",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "User Field",
                                "required": [
                                    "var_ns"
                                ],
                                "properties": {
                                    "var_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow\/delete-user-field-by-name": {
            "delete": {
                "tags": [
                    "Flow User Field"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete user field by name",
                "operationId": "flowDeleteUserFieldByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "User Field",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/whatsapp-template\/list": {
            "post": {
                "tags": [
                    "Whatsapp Template"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>List Whatsapp templates",
                "operationId": "listWhatsappTemplates",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for template name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WhatsappTemplateResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/whatsapp-template\/create": {
            "post": {
                "tags": [
                    "Whatsapp Template"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Create Whatsapp template, check https:\/\/developers.facebook.com\/docs\/graph-api\/reference\/whats-app-business-account\/message_templates\/#Creating",
                "operationId": "CreateWhatsappTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/WhatsappTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/whatsapp-template\/delete": {
            "delete": {
                "tags": [
                    "Whatsapp Template"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Delete Whatsapp template",
                "operationId": "DeleteWhatsappTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Name",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/whatsapp-template\/sync": {
            "post": {
                "tags": [
                    "Whatsapp Template"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Sync Whatsapp templates",
                "operationId": "SyncWhatsappTemplates",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/cart": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Get subscriber shopping cart detail",
                "operationId": "flowBotUserCart",
                "parameters": [
                    {
                        "name": "user_ns",
                        "in": "query",
                        "description": "Subscriber user_ns",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CartDetailResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/empty-cart": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Empty subscriber shopping cart items",
                "operationId": "flowBotUserEmptyCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/add-to-cart": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Add item to subscriber shopping cart",
                "operationId": "flowBotUserAddToCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "variant_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/remove-from-cart": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Remove item from subscriber shopping cart",
                "operationId": "flowBotUserRemoveFromCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "variant_id": {
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/cart-paid": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Checkout subscriber shopping cart and mark as paid",
                "operationId": "flowBotUserCartPaid",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "example": "pickup,delivery"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "cash,card..."
                                    },
                                    "reference_no": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "Contact phone",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Contact name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Contact email",
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "Shipping address",
                                        "type": "string"
                                    },
                                    "suburb": {
                                        "description": "Shipping suburb",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "Shipping state",
                                        "type": "string"
                                    },
                                    "postcode": {
                                        "description": "Shipping postcode",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "Shipping country",
                                        "type": "string"
                                    },
                                    "tracking_no": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/subscriber\/update-order-status": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Update order status to paid,ordered,processing,shipped,completed,cancelled,refunded",
                "operationId": "flowBotUserUpdateOrderStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns",
                                    "order_id",
                                    "status"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "order_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "paid,ordered,processing,shipped,completed,cancelled,refunded"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/discount-codes": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of discount codes",
                "operationId": "DiscountCodes",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Search for code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DiscountResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/discount-codes\/{codeId}\/get-info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get discount code info",
                "operationId": "DiscountCodeGetInfo",
                "parameters": [
                    {
                        "name": "codeId",
                        "in": "path",
                        "description": "Discount Code Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DiscountCode"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/discount-codes\/get-info-by-code": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get discount code info by code",
                "operationId": "DiscountCodeGetInfoByCode",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Discount Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DiscountCode"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/discount-codes\/create": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Create new tag",
                "operationId": "CreateDiscountCode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "code",
                                    "type",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "percentage,amount,free_shipping"
                                    },
                                    "discount_percentage": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "example": 5.05
                                    },
                                    "once_per_order": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "min_require": {
                                        "type": "string",
                                        "example": "none,price,qty"
                                    },
                                    "min_price": {
                                        "type": "number",
                                        "example": 100
                                    },
                                    "min_qty": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "has_usage_limit": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "max_usage_count": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "one_per_customer": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "example": "2022-12-25 00:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "example": "2022-12-27 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DiscountCode"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/discount-codes\/{codeId}\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update discount code.",
                "operationId": "UpdateDiscountCode",
                "parameters": [
                    {
                        "name": "codeId",
                        "in": "path",
                        "description": "Discount Code Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "percentage,amount,free_shipping"
                                    },
                                    "discount_percentage": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "example": 5.05
                                    },
                                    "once_per_order": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "min_require": {
                                        "type": "string",
                                        "example": "none,price,qty"
                                    },
                                    "min_price": {
                                        "type": "number",
                                        "example": 100
                                    },
                                    "min_qty": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "has_usage_limit": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "max_usage_count": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "one_per_customer": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "example": "2022-12-25 00:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "example": "2022-12-27 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DiscountCode"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/discount-codes\/{codeId}\/delete": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete discount code",
                "operationId": "DeleteDiscountCode",
                "parameters": [
                    {
                        "name": "codeId",
                        "in": "path",
                        "description": "Discount Code Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/discount-codes\/delete-by-code": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete discount code by code",
                "operationId": "DeleteDiscountCodeByCode",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Discount Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/orders": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of orders",
                "operationId": "Orders",
                "parameters": [
                    {
                        "name": "user_ns",
                        "in": "query",
                        "description": "Subscriber user_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "12"
                                                    },
                                                    "total": {
                                                        "type": "string",
                                                        "example": "25.00"
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "usd"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "paid"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/orders\/{orderId}\/get-info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get order info",
                "operationId": "OrderGetInfo",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/Order"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/orders\/create": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Create new order for bot user",
                "operationId": "flowBotUserCreateOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "user_ns"
                                ],
                                "properties": {
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "paid,ordered,processing,shipped,completed,cancelled,refunded"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "example": "pickup,delivery"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "cash,card..."
                                    },
                                    "reference_no": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "Shipping address",
                                        "type": "string"
                                    },
                                    "suburb": {
                                        "description": "Shipping suburb",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "Shipping state",
                                        "type": "string"
                                    },
                                    "postcode": {
                                        "description": "Shipping postcode",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "Shipping country",
                                        "type": "string"
                                    },
                                    "tracking_no": {
                                        "type": "string"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "variant_id": {
                                                    "description": "Product Variant Id",
                                                    "type": "integer",
                                                    "example": "234"
                                                },
                                                "qty": {
                                                    "description": "Quantity",
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/orders\/{orderId}\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Flow)<\/code><br><br>Update order",
                "operationId": "UpdateOrder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "paid,ordered,processing,shipped,completed,cancelled,refunded"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "example": "pickup,delivery"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "cash,card..."
                                    },
                                    "reference_no": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "Shipping address",
                                        "type": "string"
                                    },
                                    "suburb": {
                                        "description": "Shipping suburb",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "Shipping state",
                                        "type": "string"
                                    },
                                    "postcode": {
                                        "description": "Shipping postcode",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "Shipping country",
                                        "type": "string"
                                    },
                                    "tracking_no": {
                                        "type": "string"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "variant_id": {
                                                    "description": "Product Variant Id",
                                                    "type": "integer",
                                                    "example": "234"
                                                },
                                                "qty": {
                                                    "description": "Quantity",
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of products",
                "operationId": "Products",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for product name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_type_id",
                        "in": "query",
                        "description": "Search by product type id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "vendor_id",
                        "in": "query",
                        "description": "Search by vendor id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/{productId}\/get-info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get product info",
                "operationId": "ProductGetInfo",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/Product"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/create": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Create new product",
                "operationId": "CreateProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https:\/\/example.com\/image.png"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "vendor": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "use_variant": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 12.99
                                    },
                                    "compare_price": {
                                        "type": "integer",
                                        "example": 15.99
                                    },
                                    "sku": {
                                        "type": "string"
                                    },
                                    "barcode": {
                                        "type": "string"
                                    },
                                    "track_stock": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "allow_no_stock_sell": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "variant_1_name": {
                                        "type": "string",
                                        "example": "color"
                                    },
                                    "variant_2_name": {
                                        "type": "string",
                                        "example": "size"
                                    },
                                    "variants": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "image": {
                                                    "type": "string",
                                                    "example": "https:\/\/example.com\/image.png"
                                                },
                                                "variant_1_value": {
                                                    "type": "string",
                                                    "example": "blue"
                                                },
                                                "variant_2_value": {
                                                    "type": "string",
                                                    "example": "large"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 12.99
                                                },
                                                "compare_price": {
                                                    "type": "integer",
                                                    "example": 15.99
                                                },
                                                "taxable": {
                                                    "type": "integer",
                                                    "enum": [
                                                        0,
                                                        1
                                                    ],
                                                    "example": 0
                                                },
                                                "sku": {
                                                    "type": "string"
                                                },
                                                "barcode": {
                                                    "type": "string"
                                                },
                                                "track_stock": {
                                                    "type": "integer",
                                                    "enum": [
                                                        0,
                                                        1
                                                    ],
                                                    "example": 0
                                                },
                                                "allow_no_stock_sell": {
                                                    "type": "integer",
                                                    "enum": [
                                                        0,
                                                        1
                                                    ],
                                                    "example": 0
                                                },
                                                "qty": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/Product"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/{productId}\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update product info only. To update variants, use \/shop\/products\/update-variant",
                "operationId": "UpdateProduct",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https:\/\/example.com\/image.png"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "vendor": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/Product"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/{productId}\/delete": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete product",
                "operationId": "DeleteProduct",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-tags": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of product tags",
                "operationId": "Tags",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductTagResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-tags\/{tagId}\/get-info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get tag info",
                "operationId": "TagGetInfo",
                "parameters": [
                    {
                        "name": "tagId",
                        "in": "path",
                        "description": "Tag Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductTag"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-tags\/create": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Create new tag",
                "operationId": "CreateTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductTag"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-tags\/{tagId}\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update tag name.",
                "operationId": "UpdateTag",
                "parameters": [
                    {
                        "name": "tagId",
                        "in": "path",
                        "description": "Tag Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductTag"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-tags\/{tagId}\/delete": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete tag",
                "operationId": "DeleteTag",
                "parameters": [
                    {
                        "name": "tagId",
                        "in": "path",
                        "description": "Tag Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-types": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of product types",
                "operationId": "Types",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductTypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-types\/{typeId}\/get-info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get type info",
                "operationId": "TypeGetInfo",
                "parameters": [
                    {
                        "name": "typeId",
                        "in": "path",
                        "description": "Type Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductType"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-types\/create": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Create new type",
                "operationId": "CreateType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductType"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-types\/{typeId}\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update type name.",
                "operationId": "UpdateType",
                "parameters": [
                    {
                        "name": "typeId",
                        "in": "path",
                        "description": "Type Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductType"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-types\/{typeId}\/delete": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete type",
                "operationId": "DeleteType",
                "parameters": [
                    {
                        "name": "typeId",
                        "in": "path",
                        "description": "Type Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-vendors": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of product vendors",
                "operationId": "Vendors",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductVendorResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-vendors\/{vendorId}\/get-info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get vendor info",
                "operationId": "VendorGetInfo",
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "description": "Vendor Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductVendor"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-vendors\/create": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Create new vendor",
                "operationId": "CreateVendor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductVendor"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-vendors\/{vendorId}\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update vendor name.",
                "operationId": "UpdateVendor",
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "description": "Vendor Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProductVendor"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/product-vendors\/{vendorId}\/delete": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete vendor",
                "operationId": "DeleteVendor",
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "description": "Vendor Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/business-hours\/info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get store business hours",
                "operationId": "ShopGetBusinessHours",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BusinessHours"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/business-hours\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update store business hours. <br>id, available values: 1, 2, 3, 4, 5, 6, 7<br>name, available values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday<br>option, available values: open, close, open_1, open_2<br>start, required if option is open_1 or open_2, available values: between 00:00 and 23:45, stepping by 00:15<br>end, required if option is open_1 or open_2, available values: between 00:00 and 24:00, stepping by 00:15<br>start_2, required if option is open_2, available values: between 00:00 and 23:45, stepping by 00:15<br>end_2, required if option is open_2, available values: between 00:00 and 24:00, stepping by 00:15",
                "operationId": "ShopUpdateBusinessHours",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "data"
                                ],
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Monday"
                                                },
                                                "option": {
                                                    "type": "string",
                                                    "example": "open_2"
                                                },
                                                "start": {
                                                    "type": "string",
                                                    "example": "00:00"
                                                },
                                                "end": {
                                                    "type": "string",
                                                    "example": "08:15"
                                                },
                                                "start_2": {
                                                    "type": "string",
                                                    "example": "15:30"
                                                },
                                                "end_2": {
                                                    "type": "string",
                                                    "example": "18:45"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BusinessHours"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/locations": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of locations",
                "operationId": "Locations",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ShopLocationResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/locations\/{locationId}\/get-info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get lcoation info",
                "operationId": "LocationGetInfo",
                "parameters": [
                    {
                        "name": "locationId",
                        "in": "path",
                        "description": "Location Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ShopLocation"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/locations\/create": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Create new location",
                "operationId": "CreateLocation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "name",
                                    "address",
                                    "lat",
                                    "lng"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "lat": {
                                        "type": "number"
                                    },
                                    "lng": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ShopLocation"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/locations\/{locationId}\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update location.",
                "operationId": "UpdateLocation",
                "parameters": [
                    {
                        "name": "locationId",
                        "in": "path",
                        "description": "Location Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "lat": {
                                        "type": "number"
                                    },
                                    "lng": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ShopLocation"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/locations\/{locationId}\/delete": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete location",
                "operationId": "DeleteLocation",
                "parameters": [
                    {
                        "name": "locationId",
                        "in": "path",
                        "description": "Location Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/{productId}\/variants": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of product variants",
                "operationId": "ProductVariants",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/VariantResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/{productId}\/variants\/{variantId}\/get-info": {
            "get": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get product variant info",
                "operationId": "ProductVariantInfo",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "variantId",
                        "in": "path",
                        "description": "Variant Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/Variant"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/{productId}\/variants\/create": {
            "post": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Create new product variant",
                "operationId": "CreateProductVariant",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "example": "https:\/\/example.com\/image.png"
                                    },
                                    "variant_1_value": {
                                        "type": "string",
                                        "example": "blue"
                                    },
                                    "variant_2_value": {
                                        "type": "string",
                                        "example": "large"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 12.99
                                    },
                                    "compare_price": {
                                        "type": "integer",
                                        "example": 15.99
                                    },
                                    "taxable": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "sku": {
                                        "type": "string"
                                    },
                                    "barcode": {
                                        "type": "string"
                                    },
                                    "track_stock": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "allow_no_stock_sell": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/Variant"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/{productId}\/variants\/{variantId}\/update": {
            "put": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update product variant info",
                "operationId": "UpdateProductVariant",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "variantId",
                        "in": "path",
                        "description": "Variant Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "example": "https:\/\/example.com\/image.png"
                                    },
                                    "variant_1_value": {
                                        "type": "string",
                                        "example": "blue"
                                    },
                                    "variant_2_value": {
                                        "type": "string",
                                        "example": "large"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 12.99
                                    },
                                    "compare_price": {
                                        "type": "integer",
                                        "example": 15.99
                                    },
                                    "taxable": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "sku": {
                                        "type": "string"
                                    },
                                    "barcode": {
                                        "type": "string"
                                    },
                                    "track_stock": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "allow_no_stock_sell": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/Variant"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop\/products\/{productId}\/variants\/{variantId}\/delete": {
            "delete": {
                "tags": [
                    "Ecommerce"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete product variant",
                "operationId": "DeleteProductVariant",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "variantId",
                        "in": "path",
                        "description": "Variant Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow-summary": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the flow summary",
                "operationId": "AnalyticsFlowSummary",
                "parameters": [
                    {
                        "name": "range",
                        "in": "query",
                        "description": "Available ranges: <code>yesterday<\/code> (default), <code>last_7_days<\/code>, <code>last_week<\/code>, <code>last_30_days<\/code>, <code>last_month<\/code>, <code>last_3_months<\/code>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "yesterday"
                    },
                    {
                        "name": "flow_ns",
                        "in": "query",
                        "description": "use this to return only the summary for one bot",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/FlowUsageSummaryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/flow-agent-summary": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the flow agent summary",
                "operationId": "AnalyticsFlowAgentSummary",
                "parameters": [
                    {
                        "name": "range",
                        "in": "query",
                        "description": "Available ranges: <code>yesterday<\/code> (default), <code>last_7_days<\/code>, <code>last_week<\/code>, <code>last_30_days<\/code>, <code>last_month<\/code>, <code>last_3_months<\/code>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "yesterday"
                    },
                    {
                        "name": "flow_ns",
                        "in": "query",
                        "description": "use this to return only the summary for one bot",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/FlowAgentSummaryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team-bot-users": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of bot users by seaching for name, phone, email and so on.",
                "operationId": "teamBotUsers",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 1000",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for subscriber name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Search for subscriber phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Search for subscriber email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_channel",
                        "in": "query",
                        "description": "Search for subscriber is from channel, available value 'facebook', 'instagram', 'whatsapp_cloud', 'whatsapp', 'google', 'telegram', 'line', 'viber', 'vk', 'wechat', 'web', 'apichat'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_opt_in_email",
                        "in": "query",
                        "description": "Search for subscriber is opted in email, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_opt_in_sms",
                        "in": "query",
                        "description": "Search for subscriber is opted in SMS, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_interacted_in_last_24h",
                        "in": "query",
                        "description": "Search for subscriber is interacted within last 24 hours, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_bot_interacted_in_last_24h",
                        "in": "query",
                        "description": "Search for subscribers have bot interacted within last 24 hours, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_last_message_in_last_24h",
                        "in": "query",
                        "description": "Search for subscribers have last message within last 24 hours, including message sent from bot user, agent and bot, available value 'yes', 'no'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BotUserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team-flows": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of workspace bots",
                "operationId": "workspaceBots",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for bot name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by channel type, available type: web, facebook, instagram, whatsapp, whatsapp_cloud, wechat, telegram, google, slack, line, viber, vk, voice, sms, rcs, intercom, jivochat, chatwoot",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/FlowResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/integration\/shopify": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the config of shopify integration",
                "operationId": "getShopifyData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "MyShopify Domain",
                                                    "type": "string",
                                                    "example": "xxx.myshopify.com"
                                                },
                                                "api_key": {
                                                    "description": "API key",
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "description": "Access Token",
                                                    "type": "string"
                                                },
                                                "wait_time": {
                                                    "description": "Abandoned cart wait time",
                                                    "type": "integer",
                                                    "example": "30"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update the config of shopify integration",
                "operationId": "updateShopifyData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Data",
                                "required": [
                                    "url",
                                    "api_key",
                                    "token"
                                ],
                                "properties": {
                                    "url": {
                                        "description": "MyShopify Domain",
                                        "type": "string",
                                        "example": "xxx.myshopify.com"
                                    },
                                    "api_key": {
                                        "description": "API key",
                                        "type": "string"
                                    },
                                    "token": {
                                        "description": "Access Token",
                                        "type": "string"
                                    },
                                    "wait_time": {
                                        "description": "Abandoned cart wait time, default is 30 minutes",
                                        "type": "integer",
                                        "example": "30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "MyShopify Domain",
                                                    "type": "string",
                                                    "example": "xxx.myshopify.com"
                                                },
                                                "api_key": {
                                                    "description": "API key",
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "description": "Access Token",
                                                    "type": "string"
                                                },
                                                "wait_time": {
                                                    "description": "Abandoned cart wait time in minutes",
                                                    "type": "integer",
                                                    "example": "30"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Clear the config of shopify integration",
                "operationId": "clearShopifyData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/integration\/woocommerce": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the config of WooCommerce integration",
                "operationId": "getWoocommerceData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "Store URL",
                                                    "type": "string",
                                                    "example": "https:\/\/woo.dev"
                                                },
                                                "api_key": {
                                                    "description": "API consumer key",
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "description": "API consumer secret",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update the config of WooCommerce integration",
                "operationId": "updateWoocommerceData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Data",
                                "required": [
                                    "url",
                                    "api_key",
                                    "token"
                                ],
                                "properties": {
                                    "url": {
                                        "description": "Store URL",
                                        "type": "string",
                                        "example": "https:\/\/woo.dev"
                                    },
                                    "api_key": {
                                        "description": "API consumer key",
                                        "type": "string"
                                    },
                                    "token": {
                                        "description": "API consumer secret",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "Store URL",
                                                    "type": "string",
                                                    "example": "https:\/\/woo.dev"
                                                },
                                                "api_key": {
                                                    "description": "API consumer key",
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "description": "API consumer secret",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Clear the config of WooCommerce integration",
                "operationId": "clearWoocommerceData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/integration\/dropi": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the config of Dropi integration",
                "operationId": "getDropiData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "API URL",
                                                    "type": "string",
                                                    "example": "https:\/\/api.dropi.co\/"
                                                },
                                                "api_key": {
                                                    "description": "API key",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update the config of Dropi integration",
                "operationId": "updateDropiData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Data",
                                "required": [
                                    "url",
                                    "api_key"
                                ],
                                "properties": {
                                    "url": {
                                        "description": "API URL",
                                        "type": "string",
                                        "example": "https:\/\/api.dropi.co\/"
                                    },
                                    "api_key": {
                                        "description": "API key",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "API URL",
                                                    "type": "string",
                                                    "example": "https:\/\/api.dropi.co\/"
                                                },
                                                "api_key": {
                                                    "description": "API key",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Clear the config of Dropi integration",
                "operationId": "clearDropiData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/integration\/meta-conversions-api": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the config of Meta Conversions Api integration",
                "operationId": "getMetaConversionsApiData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "description": "Access Token",
                                                    "type": "string"
                                                },
                                                "dataset_id": {
                                                    "description": "Dataset Id",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update the config of Meta Conversions Api integration",
                "operationId": "updateMetaConversionsApiData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Data",
                                "required": [
                                    "token",
                                    "dataset_id"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Access Token",
                                        "type": "string"
                                    },
                                    "dataset_id": {
                                        "description": "Dataset Id",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "description": "Access Token",
                                                    "type": "string"
                                                },
                                                "dataset_id": {
                                                    "description": "Dataset Id",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Clear the config of Meta Conversions Api integration",
                "operationId": "clearMetaConversionsApiData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/integration\/openai": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the config of OpenAi integration",
                "operationId": "getOpenAiData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "api_key": {
                                                    "description": "Api Key",
                                                    "type": "string"
                                                },
                                                "org_id": {
                                                    "description": "Organization Id",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update the config of OpenAi integration",
                "operationId": "updateOpenAiData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Data",
                                "required": [
                                    "api_key"
                                ],
                                "properties": {
                                    "api_key": {
                                        "description": "Api Key",
                                        "type": "string"
                                    },
                                    "org_id": {
                                        "description": "Organization Id",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "api_key": {
                                                    "description": "Api Key",
                                                    "type": "string"
                                                },
                                                "org_id": {
                                                    "description": "Organization Id",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Clear the config of OpenAi integration",
                "operationId": "clearOpenAiData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/integration\/s3storage": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the config of S3 Storage integration",
                "operationId": "getS3StorageData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "Endpoint",
                                                    "type": "string",
                                                    "example": "https:\/\/s3.eu-north-1.amazonaws.com"
                                                },
                                                "key": {
                                                    "description": "Key",
                                                    "type": "string"
                                                },
                                                "secret": {
                                                    "description": "Secret",
                                                    "type": "string"
                                                },
                                                "bucket": {
                                                    "description": "Bucket Name",
                                                    "type": "string"
                                                },
                                                "region": {
                                                    "description": "Region",
                                                    "type": "string",
                                                    "example": "eu-north-1"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update the config of S3 Storage integration",
                "operationId": "updateS3StorageData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Data",
                                "required": [
                                    "url",
                                    "api_key",
                                    "secret",
                                    "bucket"
                                ],
                                "properties": {
                                    "url": {
                                        "description": "Endpoint",
                                        "type": "string",
                                        "example": "https:\/\/s3.eu-north-1.amazonaws.com"
                                    },
                                    "api_key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "secret": {
                                        "description": "Secret",
                                        "type": "string"
                                    },
                                    "bucket": {
                                        "description": "Bucket Name",
                                        "type": "string"
                                    },
                                    "region": {
                                        "description": "Region",
                                        "type": "string",
                                        "example": "eu-north-1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "Endpoint",
                                                    "type": "string",
                                                    "example": "https:\/\/s3.eu-north-1.amazonaws.com"
                                                },
                                                "api_key": {
                                                    "description": "Key",
                                                    "type": "string"
                                                },
                                                "secret": {
                                                    "description": "Secret",
                                                    "type": "string"
                                                },
                                                "bucket": {
                                                    "description": "Bucket Name",
                                                    "type": "string"
                                                },
                                                "region": {
                                                    "description": "Region",
                                                    "type": "string",
                                                    "example": "eu-north-1"
                                                },
                                                "status": {
                                                    "description": "verified or failed",
                                                    "type": "string",
                                                    "example": "verified"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Clear the config of S3 Storage integration",
                "operationId": "clearS3StorageData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/installed-mini-app\/list": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the list of installed mini apps",
                "operationId": "listInstalledMiniApps",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Search for app title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/InstalledApp"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/installed-mini-app\/update-api-key\/{app_id}": {
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update the config of Installed mini app, only for the mini app with auth type apikey",
                "operationId": "updateMiniAppApiKey",
                "parameters": [
                    {
                        "name": "app_id",
                        "in": "path",
                        "description": "Mini App Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Data",
                                "properties": {
                                    "api_key": {
                                        "description": "the property name is defined in the mini app",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openai-embeddings": {
            "get": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of OpenAI Embeddings",
                "operationId": "OpenAiEmbeddingList",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "heading",
                        "in": "query",
                        "description": "Search for heading",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "description": "Search for text",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OpenAiEmbeddingResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openai-embeddings\/{id}\/get-info": {
            "get": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get embedding info",
                "operationId": "OpenAiEmbeddingGetInfo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OpenAiEmbedding"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openai-embeddings\/create": {
            "post": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Create new embedding",
                "operationId": "OpenAiEmbeddingCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "heading",
                                    "text"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "heading": {
                                        "type": "string"
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OpenAiEmbedding"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openai-embeddings\/{id}\/update": {
            "put": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Update embeding heading and text.",
                "operationId": "OpenAiEmbeddingUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "heading": {
                                        "type": "string"
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OpenAiEmbedding"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openai-embeddings\/{id}\/delete": {
            "delete": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete embedding",
                "operationId": "OpenAiEmbeddingDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openai-embeddings\/import": {
            "post": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Import OpenAI Embeddings, maximum 100 embeddings, max characters for each heading is 50, max characters for each text is 1000",
                "operationId": "OpenAiEmbeddingImport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "rows"
                                ],
                                "properties": {
                                    "rows": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "heading": {
                                                    "type": "string"
                                                },
                                                "text": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "inserted": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": "0"
                                        },
                                        "updated": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": "0"
                                        },
                                        "skipped": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": "0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openai-embeddings\/generate": {
            "post": {
                "tags": [
                    "OpenAI"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Regenerate embeddings",
                "operationId": "OpenAiEmbeddingGenerate",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team-info": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get workspace info",
                "operationId": "workspaceInfo",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": "123"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "workspace name"
                                                },
                                                "image": {
                                                    "type": "string"
                                                },
                                                "owner_id": {
                                                    "type": "integer",
                                                    "example": "222"
                                                },
                                                "owner_email": {
                                                    "type": "string",
                                                    "example": "owner@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/labels": {
            "get": {
                "tags": [
                    "Team Label"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of labels",
                "operationId": "teamLabels",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for label name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TeamLabelResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/create-label": {
            "post": {
                "tags": [
                    "Team Label"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>create new label",
                "operationId": "teamCreateLabel",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Label",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TeamLabel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/delete-label": {
            "delete": {
                "tags": [
                    "Team Label"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete label",
                "operationId": "teamDeleteLabel",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Label Id",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/delete-label-by-name": {
            "delete": {
                "tags": [
                    "Team Label"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Delete label by label name",
                "operationId": "teamDeleteLabelByName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Label",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/ticket-lists": {
            "get": {
                "tags": [
                    "Ticket List"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of ticket lists",
                "operationId": "teamTicketLists",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for list name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TeamListResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/ticket-lists\/{listId}\/fields": {
            "get": {
                "tags": [
                    "Ticket List"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of ticket list fields",
                "operationId": "teamTicketListFields",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/ticket-lists\/{listId}\/items": {
            "get": {
                "tags": [
                    "Ticket List"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of ticket list items",
                "operationId": "teamTicketListItems",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Search for list item title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flow_ns",
                        "in": "query",
                        "description": "Search for list items by flow_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_ns",
                        "in": "query",
                        "description": "Search for list items by user_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TicketResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/ticket-lists\/{listId}\/log-data": {
            "get": {
                "tags": [
                    "Ticket List"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get the ticket list change log data",
                "operationId": "teamTicketListLogData",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "unix timestamp between 6 month agos and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "unix timestamp between 6 months ago and now, e.g. 1786123679. ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "flow_ns",
                        "in": "query",
                        "description": "Search for list items by flow_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_ns",
                        "in": "query",
                        "description": "Search for list items by user_ns",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "list_item_id",
                        "in": "query",
                        "description": "the list item id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "column_name",
                        "in": "query",
                        "description": "Search for list items by column name, available values: select1, select2, select3, select4, select5",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TeamListLogDataResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/ticket-lists\/{listId}\/create": {
            "post": {
                "tags": [
                    "Ticket List"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>create new ticket",
                "operationId": "teamCreateTicketListItem",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "required": [
                                    "title",
                                    "user_ns"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "user_ns": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "assignee": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "text1": {
                                        "type": "string"
                                    },
                                    "text2": {
                                        "type": "string"
                                    },
                                    "text3": {
                                        "type": "string"
                                    },
                                    "text4": {
                                        "type": "string"
                                    },
                                    "text5": {
                                        "type": "string"
                                    },
                                    "select1": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "select2": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "select3": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "select4": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "select5": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "number1": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "number2": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "rating1": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "rating2": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "date1": {
                                        "description": "format: Y-m-d, example: 2024-10-15",
                                        "type": "string"
                                    },
                                    "date2": {
                                        "description": "format: Y-m-d, example: 2024-10-15",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/ticket-lists\/{listId}\/update\/{listItemId}": {
            "put": {
                "tags": [
                    "Ticket List"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>update a ticket, include only the fields that need to be changed",
                "operationId": "teamUpdateTicketListItem",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "listItemId",
                        "in": "path",
                        "description": "List Item Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "title": "Body",
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "assignee": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "text1": {
                                        "type": "string"
                                    },
                                    "text2": {
                                        "type": "string"
                                    },
                                    "text3": {
                                        "type": "string"
                                    },
                                    "text4": {
                                        "type": "string"
                                    },
                                    "text5": {
                                        "type": "string"
                                    },
                                    "select1": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "select2": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "select3": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "select4": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "select5": {
                                        "description": "available value can be option_key or option_code",
                                        "type": "string"
                                    },
                                    "number1": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "number2": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "rating1": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "rating2": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "date1": {
                                        "description": "format: Y-m-d, example: 2024-10-15",
                                        "type": "string"
                                    },
                                    "date2": {
                                        "description": "format: Y-m-d, example: 2024-10-15",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team\/ticket-lists\/{listId}\/delete\/{listItemId}": {
            "delete": {
                "tags": [
                    "Ticket List"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>delete a ticket",
                "operationId": "teamDeleteTicketListItem",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "listItemId",
                        "in": "path",
                        "description": "List Item Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseOk"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/team-members": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of workspace members",
                "operationId": "workspaceMembers",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for agent name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role, available role: owner, admin, member, agent",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TeamAgentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/templates": {
            "get": {
                "tags": [
                    "Template"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of templates",
                "operationId": "Templates",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for template name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TemplateResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/template\/{templateNs}\/installs": {
            "get": {
                "tags": [
                    "Template"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Get list of installs by template ns",
                "operationId": "TemplatesInstalls",
                "parameters": [
                    {
                        "name": "templateNs",
                        "in": "path",
                        "description": "Template Ns",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items in the response",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number, between 1 and 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TemplateInstallLogResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/template\/{templateNs}\/generate-one-time-link": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "",
                "description": "<code>Scope required: (Manage Team)<\/code><br><br>Generate template one time install link",
                "operationId": "TemplateOneTimeLink",
                "parameters": [
                    {
                        "name": "templateNs",
                        "in": "path",
                        "description": "Template Ns",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "add days to expire the link, default is 30",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "title": "Response Body",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TemplateOneTimeLinkResource"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "",
                "description": "Get current user info",
                "operationId": "UserInfo",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AgentActivityLogData": {
                "title": "Agent Activity Log Data",
                "description": "Agent Activity Log Data model",
                "properties": {
                    "agent_id": {
                        "title": "Agent Id",
                        "type": "integer"
                    },
                    "user_ns": {
                        "title": "User Ns",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description": "created time",
                        "type": "string"
                    },
                    "source_type": {
                        "title": "Source Type",
                        "description": "available value: agent, bot, bot_user, api, webhook",
                        "type": "string"
                    },
                    "action": {
                        "title": "Action",
                        "description": "available value: open, close, assign, reply, note, pending, spam, invalid, add_collaborator, remove_collaborator, subscribe_to_bot, unsubscribe_from_bot, opt_in_sms, opt_out_sms, opt_in_email, opt_out_email",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AgentActivityLogData"
                }
            },
            "BotField": {
                "title": "Bot Field",
                "description": "Flow User Field model",
                "required": [
                    "name",
                    "var_type",
                    "value"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Field name",
                        "type": "string"
                    },
                    "var_ns": {
                        "title": "Field Ns",
                        "type": "string"
                    },
                    "var_type": {
                        "title": "Field Type",
                        "type": "string",
                        "enum": [
                            "text",
                            "number",
                            "boolean",
                            "date",
                            "datetime",
                            "array"
                        ],
                        "example": "text"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "description": "Field value",
                        "type": "string",
                        "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                    },
                    "is_template_field": {
                        "title": "is_template_field",
                        "description": "is this bot field a Template field",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BotField"
                }
            },
            "BotUser": {
                "title": "Subscriber",
                "description": "Flow Subscriber model",
                "required": [
                    "name",
                    "email",
                    "phone"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Subscriber name",
                        "type": "string"
                    },
                    "user_ns": {
                        "title": "User Ns",
                        "description": "User unique id",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User Id",
                        "description": "User unique id in channel, e.g. Facebook, WhatsApp, WeChat...",
                        "type": "string"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "gender": {
                        "title": "Gender",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "type": "string"
                    },
                    "locale": {
                        "title": "Locale",
                        "type": "string"
                    },
                    "language": {
                        "title": "Language",
                        "type": "string"
                    },
                    "profile_pic": {
                        "title": "Profile Image",
                        "type": "string"
                    },
                    "subscribed": {
                        "title": "Subscribed at time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-11-27 17:50:45"
                    },
                    "opted_in_email": {
                        "title": "Email Opted-In at time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-11-27 17:50:45"
                    },
                    "opted_in_sms": {
                        "title": "SMS Opted-In at time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-11-27 17:50:45"
                    },
                    "opted_in_through": {
                        "title": "Opted-In through",
                        "type": "string"
                    },
                    "last_interaction": {
                        "title": "Last interaction time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-11-27 17:50:45"
                    },
                    "last_seen": {
                        "title": "Last seen at time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-11-27 17:50:45"
                    },
                    "last_message_at": {
                        "title": "Last message at time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-11-27 17:50:45"
                    },
                    "last_message_type": {
                        "title": "Last message type",
                        "type": "string"
                    },
                    "tags": {
                        "title": "Subscriber Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Tag"
                        }
                    },
                    "user_fields": {
                        "title": "Subscriber user fields",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserField"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BotUser"
                }
            },
            "ChatMsg": {
                "title": "Chat Message",
                "description": "Chat message model",
                "required": [
                    "type"
                ],
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "123"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "enum": [
                            "in",
                            "out",
                            "agent"
                        ],
                        "example": "in"
                    },
                    "msg_type": {
                        "title": "Message Type",
                        "type": "string",
                        "enum": [
                            "text",
                            "image",
                            "audio",
                            "video",
                            "file"
                        ],
                        "example": "text"
                    },
                    "content": {
                        "title": "Message Content",
                        "type": "string",
                        "example": "text content"
                    },
                    "payload": {
                        "title": "Message Payload",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "sender_id": {
                        "title": "Sender User ns",
                        "type": "string"
                    },
                    "ts": {
                        "title": "Timestamp",
                        "type": "integer",
                        "example": "1636073956"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChatMsg"
                }
            },
            "ConversationData": {
                "title": "Conversation Data",
                "description": "Conversation Data model",
                "properties": {
                    "id": {
                        "title": "Conversation id",
                        "type": "integer"
                    },
                    "flow_ns": {
                        "title": "Flow Ns",
                        "type": "string"
                    },
                    "user_ns": {
                        "title": "User Ns",
                        "type": "string"
                    },
                    "first_assign_agent_id": {
                        "title": "First Assigned Agent Id",
                        "type": "integer"
                    },
                    "first_reply_agent_id": {
                        "title": "First Reply Agent Id",
                        "type": "integer"
                    },
                    "last_assign_agent_id": {
                        "title": "Last Assigned Agent Id",
                        "type": "integer"
                    },
                    "first_close_agent_id": {
                        "title": "First Close Agent Id",
                        "type": "integer"
                    },
                    "last_close_agent_id": {
                        "title": "Last Close Agent Id",
                        "type": "integer"
                    },
                    "is_new_bot_user": {
                        "title": "Is new bot user",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description": "created time",
                        "type": "string"
                    },
                    "source_type": {
                        "title": "Source Type",
                        "description": "available value: agent, new_user, return_user",
                        "type": "string"
                    },
                    "first_open_at": {
                        "title": "First Open At",
                        "type": "string"
                    },
                    "first_close_at": {
                        "title": "First Close At",
                        "type": "string"
                    },
                    "last_open_at": {
                        "title": "Last Open At",
                        "type": "string"
                    },
                    "last_close_at": {
                        "title": "Last Close At",
                        "type": "string"
                    },
                    "first_assign_at": {
                        "title": "First Assign At",
                        "type": "string"
                    },
                    "first_reply_at": {
                        "title": "First Reply At",
                        "type": "string"
                    },
                    "last_assign_at": {
                        "title": "Last Assign At",
                        "type": "string"
                    },
                    "first_reply_after_last_assign_at": {
                        "title": "First Reply After Last Assign At",
                        "type": "string"
                    },
                    "first_open_to_first_assign": {
                        "title": "First Open to First Assign",
                        "type": "integer"
                    },
                    "first_open_to_first_reply": {
                        "title": "First Open to First Reply",
                        "type": "integer"
                    },
                    "first_reply_after_first_assign": {
                        "title": "First Reply after First Assign",
                        "type": "integer"
                    },
                    "first_reply_after_last_assign": {
                        "title": "First Reply after Last Assign",
                        "type": "integer"
                    },
                    "first_assign_to_first_close": {
                        "title": "First Assign to First Close",
                        "type": "integer"
                    },
                    "first_reply_to_first_close": {
                        "title": "First Reply to First Close",
                        "type": "integer"
                    },
                    "first_open_to_first_close": {
                        "title": "First Open to First Close",
                        "type": "integer"
                    },
                    "last_assign_to_last_close": {
                        "title": "Last Assign to Last Close",
                        "type": "integer"
                    },
                    "first_open_to_last_close": {
                        "title": "First Open to Last Close",
                        "type": "integer"
                    },
                    "handling_time": {
                        "title": "Handling time",
                        "description": "total time when is assigned and status is open",
                        "type": "integer"
                    },
                    "avg_response_time": {
                        "title": "Average Response time",
                        "type": "integer"
                    },
                    "avg_subsequent_response_time": {
                        "title": "Average SubSequent Response time",
                        "type": "integer"
                    },
                    "in_messages": {
                        "title": "Incoming messages",
                        "type": "integer"
                    },
                    "agent_messages": {
                        "title": "Outgoing messages sent from agent",
                        "type": "integer"
                    },
                    "bot_messages": {
                        "title": "Outgoing messages sent from bot",
                        "type": "integer"
                    },
                    "number_of_agent_replies": {
                        "title": "Number of agent replies",
                        "type": "integer"
                    },
                    "number_of_notes": {
                        "title": "Number of agent private notes",
                        "type": "integer"
                    },
                    "number_of_unique_agents": {
                        "title": "Number of unique agents in this converation",
                        "type": "integer"
                    },
                    "number_of_assignments": {
                        "title": "Number of assignments",
                        "type": "integer"
                    },
                    "number_of_opens": {
                        "title": "Number of opens",
                        "type": "integer"
                    },
                    "number_of_closes": {
                        "title": "Number of closes",
                        "type": "integer"
                    },
                    "opened_source": {
                        "title": "Opened Source",
                        "description": "available value: agent, bot, bot_user, api, webhook",
                        "type": "string"
                    },
                    "closed_source": {
                        "title": "Closed Source",
                        "description": "available value: agent, bot, bot_user, api, webhook",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ConversationData"
                }
            },
            "CustomEvent": {
                "title": "Custom Event",
                "description": "Flow Custom Event model",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Event name",
                        "type": "string"
                    },
                    "event_ns": {
                        "title": "Event Ns",
                        "type": "string"
                    },
                    "description": {
                        "title": "description",
                        "description": "description",
                        "type": "string"
                    },
                    "text_label": {
                        "title": "Text Parameter",
                        "description": "Parameter name",
                        "type": "string"
                    },
                    "price_label": {
                        "title": "Price Parameter",
                        "description": "Parameter name",
                        "type": "string"
                    },
                    "number_label": {
                        "title": "Number Parameter",
                        "description": "Parameter name",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CustomEvent"
                }
            },
            "CustomEventData": {
                "title": "Custom Event Data",
                "description": "Flow Custom Event Data model",
                "required": [
                    "event_ns"
                ],
                "properties": {
                    "id": {
                        "title": "Log id",
                        "type": "integer"
                    },
                    "user_ns": {
                        "title": "User Ns",
                        "type": "string"
                    },
                    "event_ns": {
                        "title": "Event Ns",
                        "type": "string"
                    },
                    "text_value": {
                        "title": "Text Parameter",
                        "description": "Parameter value",
                        "type": "string"
                    },
                    "price_value": {
                        "title": "Price Parameter",
                        "description": "Parameter value",
                        "type": "string"
                    },
                    "number_value": {
                        "title": "Number Parameter",
                        "description": "Parameter value",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description": "created time",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CustomEventData"
                }
            },
            "Flow": {
                "title": "Flow",
                "description": "Flow model",
                "required": [
                    "name",
                    "flow_ns"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Flow name",
                        "type": "string"
                    },
                    "flow_ns": {
                        "title": "Flow Ns",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "linked_label": {
                        "title": "Linked Label",
                        "description": "phone number for voice, sms, whatsapp, page id for Facebook page, instagram id for Instagram account.",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Flow"
                }
            },
            "InboundWebhook": {
                "title": "Inbound Webhook",
                "description": "Inbound Webhook model",
                "required": [
                    "hook_uid",
                    "name",
                    "sub_flow_ns",
                    "status"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "hook_uid": {
                        "title": "Hook Uid",
                        "type": "string"
                    },
                    "sub_flow_ns": {
                        "title": "sub_flow_ns",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "InboundWebhook"
                }
            },
            "Segment": {
                "title": "Segment",
                "description": "Flow Segment model",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Segment name",
                        "type": "string"
                    },
                    "segment_ns": {
                        "title": "Segment Ns",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Segment"
                }
            },
            "SubFlow": {
                "title": "Sub Flow",
                "description": "Sub Flow model",
                "required": [
                    "name",
                    "sub_flow_ns"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Sub Flow name",
                        "type": "string"
                    },
                    "sub_flow_ns": {
                        "title": "Sub Flow Ns",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SubFlow"
                }
            },
            "SystemField": {
                "title": "System Field",
                "description": "Flow System Field model",
                "required": [
                    "var_ns",
                    "value"
                ],
                "properties": {
                    "var_ns": {
                        "title": "Field Ns",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "description": "Field value",
                        "type": "string",
                        "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SystemField"
                }
            },
            "Tag": {
                "title": "Tag",
                "description": "Flow Tag model",
                "required": [
                    "name",
                    "tag_ns"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Tag name",
                        "type": "string"
                    },
                    "tag_ns": {
                        "title": "Tag Ns",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Tag"
                }
            },
            "UserField": {
                "title": "User Field",
                "description": "Flow User Field model",
                "required": [
                    "name",
                    "var_type",
                    "value"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Field name",
                        "type": "string"
                    },
                    "var_ns": {
                        "title": "Field Ns",
                        "type": "string"
                    },
                    "var_type": {
                        "title": "Field Type",
                        "type": "string",
                        "enum": [
                            "text",
                            "number",
                            "boolean",
                            "date",
                            "datetime",
                            "array"
                        ],
                        "example": "text"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "description": "Field value",
                        "type": "string",
                        "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserField"
                }
            },
            "WhatsappTemplate": {
                "title": "WhatsappTemplate",
                "description": "WhatsappTemplate model",
                "required": [
                    "name",
                    "language",
                    "category",
                    "components"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Template name",
                        "type": "string"
                    },
                    "language": {
                        "title": "Language",
                        "type": "string"
                    },
                    "category": {
                        "title": "Category",
                        "type": "string"
                    },
                    "components": {
                        "title": "Components",
                        "description": "https:\/\/developers.facebook.com\/docs\/whatsapp\/business-management-api\/message-templates\/components",
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "BODY"
                                },
                                "text": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "WhatsappTemplate"
                }
            },
            "ResponseError": {
                "title": "Response Error",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "Error message"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ResponseError"
                }
            },
            "ResponseOk": {
                "title": "Response Success",
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "example": "ok"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ResponseOk"
                }
            },
            "BusinessHours": {
                "title": "Location",
                "description": "Business Hours model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Id, available values: 1, 2, 3, 4, 5, 6, 7",
                        "type": "string",
                        "example": "1"
                    },
                    "name": {
                        "title": "Name",
                        "description": "name, available values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday",
                        "type": "string"
                    },
                    "option": {
                        "title": "option",
                        "description": "option, available values: open, close, open_1, open_2",
                        "type": "string"
                    },
                    "start": {
                        "title": "start",
                        "description": "start time for first open hours, available values: between 00:00 and 23:45, stepping by 00:15",
                        "type": "string"
                    },
                    "end": {
                        "title": "end",
                        "description": "end time for first open hours, available values: between 00:00 and 24:00, stepping by 00:15",
                        "type": "string"
                    },
                    "start_2": {
                        "title": "start_2",
                        "description": "start time for second open hours, available values: between 00:00 and 23:45, stepping by 00:15",
                        "type": "string"
                    },
                    "end_2": {
                        "title": "end_2",
                        "description": "end time for second open hours, available values: between 00:00 and 24:00, stepping by 00:15",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BusinessHours"
                }
            },
            "CartItem": {
                "title": "Cart Item",
                "description": "Cart Item model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Variant Id",
                        "type": "integer",
                        "example": 12356
                    },
                    "product_id": {
                        "title": "Id",
                        "description": "Product Id",
                        "type": "integer",
                        "example": 78
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product name",
                        "type": "string"
                    },
                    "desc": {
                        "title": "Description",
                        "description": "Product Description",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Product Image",
                        "type": "string"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Product Price",
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "compare_price": {
                        "title": "Compare Price",
                        "description": "Product compare price",
                        "type": "number",
                        "format": "float",
                        "example": 12
                    },
                    "currency": {
                        "title": "Currency",
                        "description": "Currency",
                        "type": "string",
                        "example": "aud"
                    },
                    "num": {
                        "title": "Quantity",
                        "description": "Number of products",
                        "type": "integer",
                        "example": 2
                    },
                    "subtotal": {
                        "title": "Subtotal Price for this item",
                        "description": "Subtotal price",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CartItem"
                }
            },
            "DiscountCode": {
                "title": "Discount Code",
                "description": "Discount Code model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Discount Code Id",
                        "type": "integer",
                        "example": 78
                    },
                    "code": {
                        "title": "Discount Code",
                        "description": "Discount Code",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Percentage, Fixed Amount, Free Shipping",
                        "type": "string",
                        "example": "percentage"
                    },
                    "discount_percentage": {
                        "title": "Discount Percentage",
                        "description": "Discount Percentage",
                        "type": "integer",
                        "example": 50
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Discount Amount",
                        "type": "number",
                        "example": 5.05
                    },
                    "once_per_order": {
                        "title": "Once per order",
                        "description": "Once per order",
                        "type": "integer",
                        "example": 1
                    },
                    "min_require": {
                        "title": "Minimum requirements",
                        "description": "None, Minimum Purchase Amount, Minimum Quantity of items",
                        "type": "string",
                        "example": "none"
                    },
                    "min_price": {
                        "title": "Minimum Purchase Amount",
                        "description": "Minimum Purchase Amount",
                        "type": "number",
                        "example": 50
                    },
                    "min_qty": {
                        "title": "Minimum Quantity of items",
                        "description": "Minimum Quantity of items",
                        "type": "integer",
                        "example": 5
                    },
                    "has_usage_limit": {
                        "title": "Usage limits",
                        "description": "Usage limits",
                        "type": "integer",
                        "example": 0
                    },
                    "max_usage_count": {
                        "title": "Maximum usage count",
                        "description": "Maximum usage count",
                        "type": "integer",
                        "example": 1
                    },
                    "one_per_customer": {
                        "title": "One Per Customer",
                        "description": "Limit to one use per customer",
                        "type": "integer",
                        "example": 0
                    },
                    "start_time": {
                        "title": "Start Time",
                        "description": "Strat Time, format: Y-m-d H:i:s, in UTC timezone",
                        "type": "string"
                    },
                    "end_time": {
                        "title": "End Time",
                        "description": "End time, format: Y-m-d H:i:s, in UTC timezone",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "description": "Summary",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "DiscountCode"
                }
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Order Id",
                        "type": "integer",
                        "example": 78
                    },
                    "total_price": {
                        "title": "Total price",
                        "description": "Total price",
                        "type": "integer",
                        "example": 200
                    },
                    "num_of_items": {
                        "title": "Number of items",
                        "description": "Number of items",
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Order"
                }
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Product Id",
                        "type": "integer",
                        "example": 78
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Product description",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Product Image",
                        "type": "string"
                    },
                    "use_variant": {
                        "title": "Use variant",
                        "description": "Use variant",
                        "type": "boolean",
                        "example": true
                    },
                    "total_qty": {
                        "title": "Total number of stock",
                        "description": "Total number of stock",
                        "type": "integer",
                        "example": 200
                    },
                    "num_of_variants": {
                        "title": "Number of variants",
                        "description": "Number of variants",
                        "type": "integer",
                        "example": 2
                    },
                    "track_stock": {
                        "title": "Track Stock",
                        "description": "Track Stock",
                        "type": "boolean",
                        "example": false
                    },
                    "type": {
                        "title": "Product Type",
                        "description": "Product Type",
                        "type": "string"
                    },
                    "vendor": {
                        "title": "Product Vendor",
                        "description": "Product Vendor",
                        "type": "string"
                    },
                    "variants": {
                        "title": "Product Variants",
                        "description": "Product Variants",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/VariantJsonVarResource"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "ProductTag": {
                "title": "Product tag",
                "description": "Product tag model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Product Tag Id",
                        "type": "integer",
                        "example": 78
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product Tag name",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductTag"
                }
            },
            "ProductType": {
                "title": "Product Type",
                "description": "Product type model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Product Type Id",
                        "type": "integer",
                        "example": 78
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product type name",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductType"
                }
            },
            "ProductVendor": {
                "title": "Product Vendor",
                "description": "Product vendor model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Product Vendor Id",
                        "type": "integer",
                        "example": 78
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product Vendor name",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductVendor"
                }
            },
            "ShopLocation": {
                "title": "Location",
                "description": "Location model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Location Id",
                        "type": "integer",
                        "example": 78
                    },
                    "name": {
                        "title": "Name",
                        "description": "Location name",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "note": {
                        "title": "Note",
                        "description": "Note",
                        "type": "string"
                    },
                    "lat": {
                        "title": "Latitude",
                        "description": "latitude",
                        "type": "number"
                    },
                    "lng": {
                        "title": "Longitude",
                        "description": "longitude",
                        "type": "number"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopLocation"
                }
            },
            "Variant": {
                "title": "Product Variant",
                "description": "Product Variant model",
                "properties": {
                    "id": {
                        "title": "Variant Id",
                        "description": "Variant Id",
                        "type": "integer",
                        "example": 278
                    },
                    "product_id": {
                        "title": "Product Id",
                        "description": "Product Id",
                        "type": "integer",
                        "example": 78
                    },
                    "variant_1_value": {
                        "title": "Option 1 value",
                        "description": "Option 1 value",
                        "type": "string"
                    },
                    "variant_2_value": {
                        "title": "Option 2 value",
                        "description": "Option 2 value",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Variant Image",
                        "type": "string"
                    },
                    "price": {
                        "title": "Variant price",
                        "description": "Variant price",
                        "type": "integer",
                        "example": 12.99
                    },
                    "compare_price": {
                        "title": "Compare at price",
                        "description": "Compare at price",
                        "type": "integer",
                        "example": 15.99
                    },
                    "taxable": {
                        "title": "Taxable",
                        "description": "Taxable",
                        "type": "boolean",
                        "example": true
                    },
                    "sku": {
                        "title": "Sku",
                        "description": "Variant Sku",
                        "type": "string"
                    },
                    "barcode": {
                        "title": "Barcode",
                        "description": "Variant Barcode",
                        "type": "string"
                    },
                    "track_stock": {
                        "title": "Track Stock",
                        "description": "Track Stock",
                        "type": "boolean",
                        "example": false
                    },
                    "allow_no_stock_sell": {
                        "title": "Allow no stock sell",
                        "description": "If allow to continue sell when no stock available",
                        "type": "boolean",
                        "example": false
                    },
                    "qty": {
                        "title": "Number of stock",
                        "description": "Number of stock",
                        "type": "integer",
                        "example": 200
                    },
                    "display_order": {
                        "title": "Dislay order",
                        "description": "Dislay order for all variants of a product",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product Variant"
                }
            },
            "Agent": {
                "title": "Agent",
                "description": "Agent",
                "properties": {
                    "id": {
                        "title": "Agent Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Agent name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Image",
                        "type": "string"
                    },
                    "role": {
                        "title": "Role",
                        "description": "Role: owner, admin, member, agent",
                        "type": "string"
                    },
                    "is_online": {
                        "title": "is_online",
                        "description": "If the agent status is online or not",
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Agent"
                }
            },
            "FlowAgentSummary": {
                "title": "FlowAgentSummary",
                "description": "FlowAgentSummary model",
                "properties": {
                    "flow_ns": {
                        "title": "Flow Ns",
                        "description": "flow_ns",
                        "type": "string"
                    },
                    "summary_date": {
                        "title": "Summary date ",
                        "description": "Summary date, e.g. 2023-02-14",
                        "type": "string"
                    },
                    "agent_id": {
                        "title": "Agent Id",
                        "description": "agent id",
                        "type": "integer",
                        "example": 0
                    },
                    "day_reply_bot_users": {
                        "title": "day_new_bot_users",
                        "description": "the number of bot users with reply by the agent in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_agent_messages": {
                        "title": "day_agent_messages",
                        "description": "messages sent by agent in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_note_messages": {
                        "title": "day_note_messages",
                        "description": "private note messages in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_assigned": {
                        "title": "day_assigned",
                        "description": "number of new bot users created in the day with agent assigned",
                        "type": "integer",
                        "example": 0
                    },
                    "day_done": {
                        "title": "day_done",
                        "description": "number of new bot users created in the day and marked as done",
                        "type": "integer",
                        "example": 0
                    },
                    "avg_agent_response_time": {
                        "title": "avg_agent_response_time",
                        "description": "average first agent response time in seconds",
                        "type": "integer",
                        "example": 0
                    },
                    "avg_resolve_time": {
                        "title": "avg_resolve_time",
                        "description": "average done conversation time in seconds",
                        "type": "integer",
                        "example": 0
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FlowAgentSummary"
                }
            },
            "FlowUsageSummary": {
                "title": "FlowUsageSummary",
                "description": "FlowUsageSummary model",
                "properties": {
                    "flow_ns": {
                        "title": "Flow Ns",
                        "description": "flow_ns",
                        "type": "string"
                    },
                    "summary_date": {
                        "title": "Summary date ",
                        "description": "Summary date, e.g. 2023-02-14",
                        "type": "string"
                    },
                    "total_bot_users": {
                        "title": "total_bot_users",
                        "description": "Total bot users",
                        "type": "integer",
                        "example": 78
                    },
                    "day_active_bot_users": {
                        "title": "day_active_bot_users",
                        "description": "active bot users in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_new_bot_users": {
                        "title": "day_new_bot_users",
                        "description": "new created bot users in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_total_messages": {
                        "title": "day_total_messages",
                        "description": "total sent and received messages in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_in_messages": {
                        "title": "day_in_messages",
                        "description": "received messages in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_out_messages": {
                        "title": "day_out_messages",
                        "description": "messages sent by bot in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_agent_messages": {
                        "title": "day_agent_messages",
                        "description": "messages sent by agent in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_note_messages": {
                        "title": "day_note_messages",
                        "description": "private note messages in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_assigned": {
                        "title": "day_assigned",
                        "description": "number of new bot users created in the day with agent assigned",
                        "type": "integer",
                        "example": 0
                    },
                    "day_done": {
                        "title": "day_done",
                        "description": "number of new bot users created in the day and marked as done",
                        "type": "integer",
                        "example": 0
                    },
                    "day_email_sent": {
                        "title": "day_email_sent",
                        "description": "number of emails sent from bot in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "day_email_open": {
                        "title": "day_email_open",
                        "description": "number of emails opened in the day",
                        "type": "integer",
                        "example": 0
                    },
                    "avg_agent_response_time": {
                        "title": "avg_agent_response_time",
                        "description": "average first agent response time in seconds",
                        "type": "integer",
                        "example": 0
                    },
                    "avg_resolve_time": {
                        "title": "avg_resolve_time",
                        "description": "average done conversation time in seconds",
                        "type": "integer",
                        "example": 0
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FlowUsageSummary"
                }
            },
            "InstalledApp": {
                "title": "Installed Mini app",
                "description": "Installed Mini app",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "title": "App Id",
                        "description": "Mini App Id",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "description": "app name",
                        "type": "string"
                    },
                    "intro": {
                        "title": "Description",
                        "description": "App Description",
                        "type": "string"
                    },
                    "logo": {
                        "title": "Logo",
                        "description": "App Logo",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "App Image",
                        "type": "string"
                    },
                    "app_ns": {
                        "title": "App Ns",
                        "description": "App Ns",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "description": "status",
                        "type": "string"
                    },
                    "version": {
                        "title": "version",
                        "description": "version",
                        "type": "string"
                    },
                    "auth_type": {
                        "title": "auth_type",
                        "description": "apikey or oauth2",
                        "type": "string"
                    },
                    "param_names": {
                        "title": "Parameters",
                        "description": "the key name of parameters",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "api_key"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Installed Mini app"
                }
            },
            "OpenAiEmbedding": {
                "title": "OpenAi Embedding",
                "description": "OpenAiEmbedding model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Id",
                        "type": "integer",
                        "example": 78
                    },
                    "type": {
                        "title": "Type",
                        "description": "type, max 50 characters",
                        "type": "string"
                    },
                    "heading": {
                        "title": "Heading",
                        "description": "heading, max 50 characters, should be unique across all headings",
                        "type": "string"
                    },
                    "text": {
                        "title": "Text",
                        "description": "text content, max 1000 characters",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OpenAiEmbedding"
                }
            },
            "TeamLabel": {
                "title": "Team Label",
                "description": "Team Label model",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Label Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Label name",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Team Label"
                }
            },
            "TeamList": {
                "title": "Team List",
                "description": "Team List model",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "List Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "description": "List name",
                        "type": "string"
                    },
                    "icon": {
                        "title": "Icon",
                        "description": "List Icon",
                        "type": "string"
                    },
                    "list_code": {
                        "title": "List Code",
                        "description": "List code",
                        "type": "string"
                    },
                    "is_live": {
                        "title": "Is Live",
                        "description": "status",
                        "type": "integer"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Team List"
                }
            },
            "TeamListLogData": {
                "title": "List item log data",
                "description": "Ticket list item change log model",
                "required": [
                    "event_ns"
                ],
                "properties": {
                    "id": {
                        "title": "Log id",
                        "type": "integer"
                    },
                    "list_id": {
                        "title": "List Id",
                        "type": "integer"
                    },
                    "list_item_id": {
                        "title": "List Item Id",
                        "type": "integer"
                    },
                    "flow_ns": {
                        "title": "Flow Ns",
                        "type": "string"
                    },
                    "user_ns": {
                        "title": "User Ns",
                        "type": "string"
                    },
                    "action": {
                        "title": "Action",
                        "description": "create or update",
                        "type": "string"
                    },
                    "column_name": {
                        "title": "Column Name",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "description": "Option Key",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description": "created time",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TeamListLogData"
                }
            },
            "Template": {
                "title": "Template",
                "description": "Template model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Template Id",
                        "type": "integer",
                        "example": 78
                    },
                    "template_ns": {
                        "title": "Template ns",
                        "description": "Template ns",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Template name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Template description",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Template Image",
                        "type": "string"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Template Price",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Flow Type",
                        "description": "Flow Type",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Template Scope",
                        "description": "Template Scope, e.g. bot,sub_flow",
                        "type": "string"
                    },
                    "status": {
                        "title": "Template Status",
                        "description": "Template Status",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Template"
                }
            },
            "TemplateInstall": {
                "title": "Template installs",
                "description": "Template install model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Id",
                        "type": "integer",
                        "example": 78
                    },
                    "template_ns": {
                        "title": "Template ns",
                        "description": "Template ns",
                        "type": "string"
                    },
                    "flow_ns": {
                        "title": "Flow Ns",
                        "description": "Installed to Flow Ns",
                        "type": "string"
                    },
                    "team_id": {
                        "title": "Workspace Id",
                        "description": "Installed to workspace id",
                        "type": "integer"
                    },
                    "scope": {
                        "title": "Template Scope",
                        "description": "Template Scope, e.g. bot,sub_flow",
                        "type": "string"
                    },
                    "allow_republish": {
                        "title": "Allow republish",
                        "description": "Allow republish",
                        "type": "integer"
                    },
                    "can_view": {
                        "title": "Is viewable",
                        "description": "Allow to view the flow",
                        "type": "integer"
                    },
                    "can_edit": {
                        "title": "Is editable",
                        "description": "Allow to edit the flow",
                        "type": "integer"
                    },
                    "auto_update": {
                        "title": "Is auto update",
                        "description": "If this sub flow template will be auto updated",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Template version",
                        "description": "Template version",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "date time of this template installed",
                        "type": "string"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "date time of this template reinstalled",
                        "type": "string"
                    },
                    "uninstalled_at": {
                        "title": "Uninstalled at",
                        "description": "date time of this template uninstalled",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TemplateInstall"
                }
            },
            "Ticket": {
                "title": "Ticket",
                "description": "Ticket model",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "title",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Ticket"
                }
            },
            "User": {
                "title": "User",
                "description": "User",
                "properties": {
                    "id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "description": "User name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "InstalledAppResource": {
                "title": "TeamListResource",
                "description": "Team List resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/InstalledApp"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TeamListResource"
                }
            },
            "AgentActivityLogResource": {
                "title": "AgentActivityLogResource",
                "description": "Agent Activity Log resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AgentActivityLogData"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AgentActivityLogResource"
                }
            },
            "BotConversationDataResource": {
                "title": "BotConversationDataResource",
                "description": "Bot Conversation Data resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ConversationData"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BotConversationDataResource"
                }
            },
            "BotEventDataResource": {
                "title": "BotEventDataResource",
                "description": "Bot Event Data resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CustomEventData"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BotEventDataResource"
                }
            },
            "BotEventResource": {
                "title": "BotEventResource",
                "description": "Bot Event resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CustomEvent"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BotEventResource"
                }
            },
            "BotFieldResource": {
                "title": "BotFieldResource",
                "description": "Bot Field resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/BotField"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BotFieldResource"
                }
            },
            "BotSegmentResource": {
                "title": "BotSegmentResource",
                "description": "Bot Segment resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Segment"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BotSegmentResource"
                }
            },
            "BotUserResource": {
                "title": "SubscriberResource",
                "description": "Subscriber resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/BotUser"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BotUserResource"
                }
            },
            "ChatMessageResource": {
                "title": "ChatMessageResource",
                "description": "Chat Message resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ChatMsg"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChatMessageResource"
                }
            },
            "FlowResource": {
                "title": "FlowResource",
                "description": "Flow resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Flow"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FlowResource"
                }
            },
            "InboundWebhookResource": {
                "title": "InboundWebhookResource",
                "description": "Inbound Webhook resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/InboundWebhook"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "InboundWebhookResource"
                }
            },
            "SubFlowResource": {
                "title": "SubFlowResource",
                "description": "Sub Flow resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SubFlow"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SubFlowResource"
                }
            },
            "SystemFieldResource": {
                "title": "SystemFieldResource",
                "description": "System Field resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SystemField"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SystemFieldResource"
                }
            },
            "TagResource": {
                "title": "TagResource",
                "description": "Tag resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Tag"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TagResource"
                }
            },
            "UserFieldResource": {
                "title": "UserFieldResource",
                "description": "User Field resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserField"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserFieldResource"
                }
            },
            "WhatsappTemplateResource": {
                "title": "WhatsappTemplateResource",
                "description": "Whatsapp Template resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/WhatsappTemplate"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "WhatsappTemplateResource"
                }
            },
            "BusinessHoursResource": {
                "title": "BusinessHoursResource",
                "description": "Business Hours resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/BusinessHours"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BusinessHoursResource"
                }
            },
            "CartDetailResource": {
                "title": "CartDetailResource",
                "description": "Cart Detail resource",
                "properties": {
                    "id": {
                        "title": "Cart Id",
                        "description": "Cart id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Cart created at time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Cart updated at time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CartItem"
                        }
                    },
                    "num_of_items": {
                        "title": "Total Quantity",
                        "description": "Total number of items",
                        "type": "integer",
                        "example": 2
                    },
                    "total_price": {
                        "title": "Total price for the cart",
                        "description": "Total price",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CartDetailResource"
                }
            },
            "DiscountResource": {
                "title": "DiscountResource",
                "description": "Discount resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/DiscountCode"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "DiscountResource"
                }
            },
            "OrderDetailResource": {
                "title": "OrderDetailResource",
                "description": "Order Detail resource",
                "xml": {
                    "name": "OrderDetailResource"
                }
            },
            "OrderResource": {
                "title": "OrderResource",
                "description": "Order resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Order"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderResource"
                }
            },
            "ProductResource": {
                "title": "ProductResource",
                "description": "Product resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Product"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductResource"
                }
            },
            "ProductTagResource": {
                "title": "ProductTagResource",
                "description": "Product tag resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProductTag"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductTagResource"
                }
            },
            "ProductTypeResource": {
                "title": "ProductTypeResource",
                "description": "Product type resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProductType"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductTypeResource"
                }
            },
            "ProductVendorResource": {
                "title": "ProductVendorResource",
                "description": "Product vendor resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProductVendor"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductVendorResource"
                }
            },
            "ShopLocationResource": {
                "title": "ShopLocationResource",
                "description": "Location resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ShopLocation"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopLocationResource"
                }
            },
            "VariantJsonVarResource": {
                "title": "VariantJsonVarResource",
                "description": "Product Variant JsonVarResource",
                "properties": {
                    "id": {
                        "title": "Variant Id",
                        "description": "Variant Id",
                        "type": "integer",
                        "example": 278
                    },
                    "product_id": {
                        "title": "Product Id",
                        "description": "Product Id",
                        "type": "integer",
                        "example": 78
                    },
                    "option_1": {
                        "title": "Option 1 name",
                        "description": "Option 1 name",
                        "type": "string"
                    },
                    "option_2": {
                        "title": "Option 2 name",
                        "description": "Option 2 name",
                        "type": "string"
                    },
                    "option_1_value": {
                        "title": "Option 1 value",
                        "description": "Option 1 value",
                        "type": "string"
                    },
                    "option_2_value": {
                        "title": "Option 2 value",
                        "description": "Option 2 value",
                        "type": "string"
                    },
                    "name": {
                        "title": "Product name",
                        "description": "Product name",
                        "type": "string"
                    },
                    "desc": {
                        "title": "Product description",
                        "description": "Product description",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Variant Image",
                        "type": "string"
                    },
                    "price": {
                        "title": "Variant price",
                        "description": "Variant price",
                        "type": "integer",
                        "example": 12.99
                    },
                    "compare_price": {
                        "title": "Compare at price",
                        "description": "Compare at price",
                        "type": "integer",
                        "example": 15.99
                    },
                    "sku": {
                        "title": "Sku",
                        "description": "Variant Sku",
                        "type": "string"
                    },
                    "barcode": {
                        "title": "Barcode",
                        "description": "Variant Barcode",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "VariantJsonVarResource"
                }
            },
            "VariantResource": {
                "title": "VariantResource",
                "description": "Variant resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Variant"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "VariantResource"
                }
            },
            "FlowAgentSummaryResource": {
                "title": "FlowAgentSummaryResource",
                "description": "Flow agent summary resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/FlowAgentSummary"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FlowAgentSummaryResource"
                }
            },
            "FlowUsageSummaryResource": {
                "title": "FlowUsageSummaryResource",
                "description": "Flow usage summary resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/FlowUsageSummary"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FlowUsageSummaryResource"
                }
            },
            "OpenAiEmbeddingResource": {
                "title": "OpenAiEmbeddingResource",
                "description": "OpenAi Embedding resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/OpenAiEmbedding"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OpenAiEmbeddingResource"
                }
            },
            "TeamAgentResource": {
                "title": "TeamAgentResource",
                "description": "Agent resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Agent"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TeamAgentResource"
                }
            },
            "TeamLabelResource": {
                "title": "TeamLabelResource",
                "description": "Team Label resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TeamLabel"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TeamLabelResource"
                }
            },
            "TeamListLogDataResource": {
                "title": "TeamListLogDataResource",
                "description": "Ticket Log Data resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TeamListLogData"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TeamListLogDataResource"
                }
            },
            "TeamListResource": {
                "title": "TeamListResource",
                "description": "Team List resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TeamList"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TeamListResource"
                }
            },
            "TemplateInstallLogResource": {
                "title": "TemplateInstallLogResource",
                "description": "Template Install Log resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TemplateInstall"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TemplateInstallLogResource"
                }
            },
            "TemplateOneTimeLinkResource": {
                "title": "TemplateOneTimeLinkResource",
                "description": "Template one time link resource",
                "properties": {
                    "expired_at": {
                        "title": "Expired time",
                        "description": "Link will expire after the time",
                        "type": "string"
                    },
                    "one_time_token": {
                        "title": "Token",
                        "description": "Token",
                        "type": "string"
                    },
                    "url": {
                        "title": "Template url",
                        "description": "Template url",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TemplateOneTimeLinkResource"
                }
            },
            "TemplateResource": {
                "title": "TemplateResource",
                "description": "Template resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Template"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TemplateResource"
                }
            },
            "TicketResource": {
                "title": "TicketResource",
                "description": "Ticket resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Ticket"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TicketResource"
                }
            }
        },
        "securitySchemes": {
            "API KEY": {
                "type": "http",
                "description": "",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Flow",
            "description": ""
        },
        {
            "name": "Flow Tag",
            "description": ""
        },
        {
            "name": "Flow User Field",
            "description": ""
        },
        {
            "name": "Flow Bot Field",
            "description": ""
        },
        {
            "name": "Flow Segment",
            "description": ""
        },
        {
            "name": "Flow Custom Events",
            "description": ""
        },
        {
            "name": "Flow Conversation",
            "description": ""
        },
        {
            "name": "Whatsapp Template",
            "description": ""
        },
        {
            "name": "Subscriber",
            "description": ""
        },
        {
            "name": "Sending",
            "description": ""
        },
        {
            "name": "Mini-App",
            "description": ""
        },
        {
            "name": "Ecommerce",
            "description": ""
        },
        {
            "name": "Template",
            "description": ""
        },
        {
            "name": "Ticket List",
            "description": ""
        },
        {
            "name": "Team Label",
            "description": ""
        },
        {
            "name": "Integration",
            "description": ""
        },
        {
            "name": "OpenAI",
            "description": ""
        },
        {
            "name": "Workspace",
            "description": ""
        },
        {
            "name": "User",
            "description": ""
        }
    ],
    "security": [
        {
            "API KEY": []
        }
    ]
}